<?xml version="1.0" encoding="UTF-8"?>
<!--
 Tencent is pleased to support the open source community by making Tars available.

 Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.

 Licensed under the BSD 3-Clause License (the "License"); you may not use this file except
 in compliance with the License. You may obtain a copy of the License at

 https://opensource.org/licenses/BSD-3-Clause

 Unless required by applicable law or agreed to in writing, software distributed
 under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 CONDITIONS OF ANY KIND, either express or implied. See the License for the
 specific language governing permissions and limitations under the License.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qq.tars.db.ConfigMapper">
    <insert id="insertConfigFile" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO db_tars.t_config_files (server_name, host, set_name, set_area, set_group, filename, config, posttime, lastuser, level, config_flag)
            VALUE (
            #{serverName},
            #{host},
            #{setName},
            #{setArea},
            #{setGroup},
            #{filename},
            #{config},
            #{posttime},
            #{lastuser},
            #{level},
            #{configFlag}
        )
    </insert>

    <insert id="insertConfigFileHistory" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO db_tars.t_config_history_files (configid, reason, reason_select, content, posttime, lastuser)
            VALUE (
            #{configId},
            #{reason},
            #{reasonSelect},
            #{content},
            #{posttime},
            #{lastuser}
        )
    </insert>

    <insert id="insertConfigRef" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO db_tars.t_config_references (config_id, reference_id) VALUE (#{configId}, #{referenceId})
    </insert>

    <update id="updateConfigFile">
        UPDATE db_tars.t_config_files
        SET
            server_name = #{serverName},
            host        = #{host},
            set_name    = #{setName},
            set_area    = #{setArea},
            set_group   = #{setGroup},
            filename    = #{filename},
            config      = #{config},
            posttime    = #{posttime},
            lastuser    = #{lastuser},
            level       = #{level},
            config_flag = #{configFlag}
        WHERE
            id = #{id}
    </update>

    <update id="updateConfigFileHistory">
        UPDATE db_tars.t_config_history_files
        SET
            configid      = #{configId},
            reason        = #{reason},
            reason_select = #{reasonSelect},
            content       = #{content},
            posttime      = #{posttime},
            lastuser      = #{lastuser}
        WHERE
            id = #{id}
    </update>

    <delete id="deleteConfigFile">
        DELETE FROM db_tars.t_config_files
        WHERE id = #{id}
    </delete>

    <delete id="deleteConfigFileHistory">
        DELETE FROM db_tars.t_config_files_history
        WHERE id = #{id}
    </delete>

    <delete id="deleteConfigRef">
        DELETE FROM db_tars.t_config_references
        WHERE id = #{id}
    </delete>

    <delete id="deleteUnusedNodeConfigFile">
        DELETE FROM db_tars.t_config_files
        WHERE
            level = 3
            AND (server_name, host) NOT IN (SELECT
                                                CONCAT(application, '.', server_name),
                                                node_name
                                            FROM t_server_conf)
    </delete>

    <select id="getApplicationConfigFile" resultType="ConfigFile">
        SELECT *
        FROM db_tars.t_config_files
        WHERE
            level = 1
            AND server_name = #{application}
            AND ifnull(set_name, '') = '' AND ifnull(set_area, '') = '' AND ifnull(set_group, '') = ''
    </select>

    <select id="getUnusedApplicationConfigFile" resultType="ConfigFile">
        SELECT *
        FROM db_tars.t_config_files
        WHERE
            level = 1
            AND server_name = #{application}
            AND ifnull(set_name, '') = '' AND ifnull(set_area, '') = '' AND ifnull(set_group, '') = ''
            AND id NOT IN (
                SELECT reference_id
                FROM db_tars.t_config_references
                WHERE config_id = #{configId}
            )
    </select>

    <select id="getSetConfigFile" resultType="ConfigFile">
        SELECT *
        FROM db_tars.t_config_files
        WHERE
        level=1
        AND server_name=#{application}
        <choose>
            <when test="setName==null">
                AND FALSE
            </when>
            <otherwise>
                AND set_name=#{setName}
            </otherwise>
        </choose>
        <choose>
            <when test="setArea==null">
                AND ifnull(set_area,'')=''
            </when>
            <otherwise>
                AND set_area=#{setArea}
            </otherwise>
        </choose>
        <choose>
            <when test="setGroup==null">
                AND ifnull(set_group,'')=''
            </when>
            <otherwise>
                AND set_group=#{setGroup}
            </otherwise>
        </choose>
    </select>

    <select id="getServerConfigFile" resultType="ConfigFile">
        SELECT *
        FROM db_tars.t_config_files
        WHERE
        level=2
        AND server_name=concat(#{application},'.',#{serverName})
        <if test="setName!=null">
            AND set_name=#{setName}
        </if>
        <if test="setArea!=null">
            AND set_area=#{setArea}
        </if>
        <if test="setGroup!=null">
            AND set_group=#{setGroup}
        </if>
    </select>

    <select id="getNodeConfigFile" resultType="ConfigFile">
        SELECT *
        FROM db_tars.t_config_files
        WHERE
        level=3
        AND server_name=concat(#{application},'.',#{serverName})
        <if test="setName!=null">
            AND set_name=#{setName}
        </if>
        <if test="setArea!=null">
            AND set_area=#{setArea}
        </if>
        <if test="setGroup!=null">
            AND set_group=#{setGroup}
        </if>
    </select>

    <select id="loadConfigFile" resultType="ConfigFile">
        SELECT *
        FROM db_tars.t_config_files
        WHERE id = #{id}
    </select>

    <select id="loadConfigFiles" resultType="ConfigFile">
        SELECT *
        FROM db_tars.t_config_files
        WHERE
        <choose>
            <when test="ids != null and ids.size() > 0">
                id in
                <foreach collection="ids" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </when>
            <otherwise>
                FALSE
            </otherwise>
        </choose>
    </select>

    <select id="loadConfigFileHistory" resultType="ConfigFileHistory">
        SELECT *
        FROM db_tars.t_config_history_files
        WHERE id = #{id}
    </select>

    <select id="loadConfigRef" resultType="ConfigRef">
        SELECT *
        FROM t_config_references
        WHERE id = #{id}
    </select>

    <select id="getConfigFileHistory" resultType="ConfigFileHistory">
        SELECT *
        FROM db_tars.t_config_history_files
        WHERE configid = #{configId}
    </select>

    <select id="getConfigRefByRefId" resultType="ConfigRef">
        SELECT *
        FROM db_tars.t_config_references
        WHERE reference_id = #{refId}
    </select>

    <resultMap id="ConfigRefExpand" type="ConfigRefExt" autoMapping="true">
        <result column="ref_id" property="id"/>
        <association property="reference" javaType="ConfigFile" autoMapping="true"></association>
    </resultMap>

    <select id="getConfigRefByConfigId" resultMap="ConfigRefExpand">
        SELECT
            a.id AS ref_id,
            a.config_id,
            b.id,
            b.server_name,
            b.host,
            b.set_name,
            b.set_area,
            b.set_group,
            b.filename,
            b.config,
            b.level,
            b.posttime,
            b.lastuser,
            b.config_flag
        FROM db_tars.t_config_references a, db_tars.t_config_files b
        WHERE a.reference_id = b.id AND a.config_id = #{configId}
    </select>
</mapper>