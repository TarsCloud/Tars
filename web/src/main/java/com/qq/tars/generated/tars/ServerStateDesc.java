// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.qq.tars.generated.tars;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class ServerStateDesc {

	@TarsStructProperty(order = 0, isRequire = true)
	public String settingStateInReg = "";
	@TarsStructProperty(order = 1, isRequire = true)
	public String presentStateInReg = "";
	@TarsStructProperty(order = 2, isRequire = true)
	public String presentStateInNode = "";
	@TarsStructProperty(order = 3, isRequire = true)
	public int processId = 0;
	@TarsStructProperty(order = 4, isRequire = true)
	public String patchVersion = "";
	@TarsStructProperty(order = 5, isRequire = true)
	public String patchTime = "";
	@TarsStructProperty(order = 6, isRequire = true)
	public String patchUser = "";

	public String getSettingStateInReg() {
		return settingStateInReg;
	}

	public void setSettingStateInReg(String settingStateInReg) {
		this.settingStateInReg = settingStateInReg;
	}

	public String getPresentStateInReg() {
		return presentStateInReg;
	}

	public void setPresentStateInReg(String presentStateInReg) {
		this.presentStateInReg = presentStateInReg;
	}

	public String getPresentStateInNode() {
		return presentStateInNode;
	}

	public void setPresentStateInNode(String presentStateInNode) {
		this.presentStateInNode = presentStateInNode;
	}

	public int getProcessId() {
		return processId;
	}

	public void setProcessId(int processId) {
		this.processId = processId;
	}

	public String getPatchVersion() {
		return patchVersion;
	}

	public void setPatchVersion(String patchVersion) {
		this.patchVersion = patchVersion;
	}

	public String getPatchTime() {
		return patchTime;
	}

	public void setPatchTime(String patchTime) {
		this.patchTime = patchTime;
	}

	public String getPatchUser() {
		return patchUser;
	}

	public void setPatchUser(String patchUser) {
		this.patchUser = patchUser;
	}

	public ServerStateDesc() {
	}

	public ServerStateDesc(String settingStateInReg, String presentStateInReg, String presentStateInNode, int processId, String patchVersion, String patchTime, String patchUser) {
		this.settingStateInReg = settingStateInReg;
		this.presentStateInReg = presentStateInReg;
		this.presentStateInNode = presentStateInNode;
		this.processId = processId;
		this.patchVersion = patchVersion;
		this.patchTime = patchTime;
		this.patchUser = patchUser;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(settingStateInReg);
		result = prime * result + TarsUtil.hashCode(presentStateInReg);
		result = prime * result + TarsUtil.hashCode(presentStateInNode);
		result = prime * result + TarsUtil.hashCode(processId);
		result = prime * result + TarsUtil.hashCode(patchVersion);
		result = prime * result + TarsUtil.hashCode(patchTime);
		result = prime * result + TarsUtil.hashCode(patchUser);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ServerStateDesc)) {
			return false;
		}
		ServerStateDesc other = (ServerStateDesc) obj;
		return (
			TarsUtil.equals(settingStateInReg, other.settingStateInReg) &&
			TarsUtil.equals(presentStateInReg, other.presentStateInReg) &&
			TarsUtil.equals(presentStateInNode, other.presentStateInNode) &&
			TarsUtil.equals(processId, other.processId) &&
			TarsUtil.equals(patchVersion, other.patchVersion) &&
			TarsUtil.equals(patchTime, other.patchTime) &&
			TarsUtil.equals(patchUser, other.patchUser) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != settingStateInReg) {
			_os.write(settingStateInReg, 0);
		}
		if (null != presentStateInReg) {
			_os.write(presentStateInReg, 1);
		}
		if (null != presentStateInNode) {
			_os.write(presentStateInNode, 2);
		}
		_os.write(processId, 3);
		if (null != patchVersion) {
			_os.write(patchVersion, 4);
		}
		if (null != patchTime) {
			_os.write(patchTime, 5);
		}
		if (null != patchUser) {
			_os.write(patchUser, 6);
		}
	}

	public void readFrom(TarsInputStream _is) {
		this.settingStateInReg = _is.read(settingStateInReg, 0, true);
		this.presentStateInReg = _is.read(presentStateInReg, 1, true);
		this.presentStateInNode = _is.read(presentStateInNode, 2, true);
		this.processId = _is.read(processId, 3, true);
		this.patchVersion = _is.read(patchVersion, 4, true);
		this.patchTime = _is.read(patchTime, 5, true);
		this.patchUser = _is.read(patchUser, 6, true);
	}

}
