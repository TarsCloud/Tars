// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.qq.tars.generated.tars;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class TokenResponse {

	@TarsStructProperty(order = 1, isRequire = true)
	public String sObjName = "";
	@TarsStructProperty(order = 2, isRequire = true)
	public java.util.Map<String, String> mTokens = null;

	public String getSObjName() {
		return sObjName;
	}

	public void setSObjName(String sObjName) {
		this.sObjName = sObjName;
	}

	public java.util.Map<String, String> getMTokens() {
		return mTokens;
	}

	public void setMTokens(java.util.Map<String, String> mTokens) {
		this.mTokens = mTokens;
	}

	public TokenResponse() {
	}

	public TokenResponse(String sObjName, java.util.Map<String, String> mTokens) {
		this.sObjName = sObjName;
		this.mTokens = mTokens;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(sObjName);
		result = prime * result + TarsUtil.hashCode(mTokens);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof TokenResponse)) {
			return false;
		}
		TokenResponse other = (TokenResponse) obj;
		return (
			TarsUtil.equals(sObjName, other.sObjName) &&
			TarsUtil.equals(mTokens, other.mTokens) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(sObjName, 1);
		_os.write(mTokens, 2);
	}

	static java.util.Map<String, String> cache_mTokens;
	static { 
		cache_mTokens = new java.util.HashMap<String, String>();
		String var_7 = "";
		String var_8 = "";
		cache_mTokens.put(var_7 ,var_8);
	}

	public void readFrom(TarsInputStream _is) {
		this.sObjName = _is.readString(1, true);
		this.mTokens = (java.util.Map<String, String>) _is.read(cache_mTokens, 2, true);
	}

}
