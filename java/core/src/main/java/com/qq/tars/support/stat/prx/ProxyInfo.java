/**
 * Tencent is pleased to support the open source community by making Tars available.
 *
 * Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
 *
 * Licensed under the BSD 3-Clause License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.qq.tars.support.stat.prx;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class ProxyInfo {

	@TarsStructProperty(order = 0, isRequire = true)
	public boolean bFromClient = false;

	public boolean getBFromClient() {
		return bFromClient;
	}

	public void setBFromClient(boolean bFromClient) {
		this.bFromClient = bFromClient;
	}

	public ProxyInfo() {
	}

	public ProxyInfo(boolean bFromClient) {
		this.bFromClient = bFromClient;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(bFromClient);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ProxyInfo)) {
			return false;
		}
		ProxyInfo other = (ProxyInfo) obj;
		return (
			TarsUtil.equals(bFromClient, other.bFromClient) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(bFromClient, 0);
	}

	public void readFrom(TarsInputStream _is) {
		this.bFromClient = _is.read(bFromClient, 0, true);
	}

}
