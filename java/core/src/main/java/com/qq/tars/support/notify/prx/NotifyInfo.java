/**
 * Tencent is pleased to support the open source community by making Tars available.
 *
 * Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
 *
 * Licensed under the BSD 3-Clause License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.qq.tars.support.notify.prx;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

/**
 * 上报的信息分页记录
 */
@TarsStruct
public class NotifyInfo {

	@TarsStructProperty(order = 1, isRequire = true)
	public int nextpage = 0;
	@TarsStructProperty(order = 2, isRequire = true)
	public java.util.List<NotifyItem> notifyItems = null;

	public int getNextpage() {
		return nextpage;
	}

	public void setNextpage(int nextpage) {
		this.nextpage = nextpage;
	}

	public java.util.List<NotifyItem> getNotifyItems() {
		return notifyItems;
	}

	public void setNotifyItems(java.util.List<NotifyItem> notifyItems) {
		this.notifyItems = notifyItems;
	}

	public NotifyInfo() {
	}

	public NotifyInfo(int nextpage, java.util.List<NotifyItem> notifyItems) {
		this.nextpage = nextpage;
		this.notifyItems = notifyItems;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(nextpage);
		result = prime * result + TarsUtil.hashCode(notifyItems);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof NotifyInfo)) {
			return false;
		}
		NotifyInfo other = (NotifyInfo) obj;
		return (
			TarsUtil.equals(nextpage, other.nextpage) &&
			TarsUtil.equals(notifyItems, other.notifyItems) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(nextpage, 1);
		if (null != notifyItems) {
			_os.write(notifyItems, 2);
		}
	}

	public void readFrom(TarsInputStream _is) {
		this.nextpage = _is.read(nextpage, 1, true);
		this.notifyItems = (java.util.List<NotifyItem>) _is.read(notifyItems, 2, true);
	}

}
