/**
 * Tencent is pleased to support the open source community by making Tars available.
 *
 * Copyright (C) 2016THL A29 Limited, a Tencent company. All rights reserved.
 *
 * Licensed under the BSD 3-Clause License (the "License"); you may not use this file except 
 * in compliance with the License. You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software distributed 
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the 
 * specific language governing permissions and limitations under the License.
 */

// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 2.1.4.2 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/tars/upload/renjunyi/MTT.tars'
// **********************************************************************

#import "TarsObjectV2.h"
#import "MttBrokerDisplayInfo.h"
#import "MttBrokerPushRequest.h"

@interface MttBrokerRequestParam : TarsObjectV2

@property (nonatomic, assign, JV2_PROP_GS_V2(cConcurrency,setCConcurrency:)) TarsInt8 JV2_PROP_NM(r,0,cConcurrency);
@property (nonatomic, retain, JV2_PROP_GS_V2(sUrl,setSUrl:)) NSString* JV2_PROP_NM(r,1,sUrl);
@property (nonatomic, retain, JV2_PROP_GS_V2(sUserHttpHeader,setSUserHttpHeader:)) NSString* JV2_PROP_NM(r,2,sUserHttpHeader);
@property (nonatomic, retain, JV2_PROP_GS_V2(sPageEncodeName,setSPageEncodeName:)) NSString* JV2_PROP_NM(r,3,sPageEncodeName);
@property (nonatomic, assign, JV2_PROP_GS_V2(cZipType,setCZipType:)) TarsInt8 JV2_PROP_NM(r,4,cZipType);
@property (nonatomic, assign, JV2_PROP_GS_V2(cContentType,setCContentType:)) TarsInt8 JV2_PROP_NM(o,5,cContentType);
@property (nonatomic, assign, JV2_PROP_GS_V2(cPostEncrypted,setCPostEncrypted:)) TarsInt8 JV2_PROP_NM(o,6,cPostEncrypted);
@property (nonatomic, assign, JV2_PROP_GS_V2(cImgQualityType,setCImgQualityType:)) TarsInt8 JV2_PROP_NM(o,7,cImgQualityType);
@property (nonatomic, assign, JV2_PROP_GS_V2(wPageSizeKB,setWPageSizeKB:)) TarsInt16 JV2_PROP_NM(o,8,wPageSizeKB);
@property (nonatomic, assign, JV2_PROP_GS_V2(wMaxPageSizeKB,setWMaxPageSizeKB:)) TarsInt16 JV2_PROP_NM(o,9,wMaxPageSizeKB);
@property (nonatomic, assign, JV2_PROP_GS_V2(cBrand,setCBrand:)) TarsInt8 JV2_PROP_NM(o,10,cBrand);
@property (nonatomic, retain, JV2_PROP_GS_V2(stDisplayInfo,setStDisplayInfo:)) MttBrokerDisplayInfo* JV2_PROP_NM(o,11,stDisplayInfo);
@property (nonatomic, retain, JV2_PROP_GS_V2(vImgCacheFNV,setVImgCacheFNV:)) NSArray* JV2_PROP_EX(o,12,vImgCacheFNV,VONSNumber);
@property (nonatomic, assign, JV2_PROP_GS_V2(iEntry,setIEntry:)) TarsInt32 JV2_PROP_NM(o,13,iEntry);
@property (nonatomic, assign, JV2_PROP_GS_V2(iEntryType,setIEntryType:)) TarsInt32 JV2_PROP_NM(o,14,iEntryType);
@property (nonatomic, assign, JV2_PROP_GS_V2(cReqEncrypted,setCReqEncrypted:)) TarsInt8 JV2_PROP_NM(o,15,cReqEncrypted);
@property (nonatomic, assign, JV2_PROP_GS_V2(wVersion,setWVersion:)) TarsInt16 JV2_PROP_NM(o,16,wVersion);
@property (nonatomic, assign, JV2_PROP_GS_V2(cHttpsForceProxy,setCHttpsForceProxy:)) TarsInt8 JV2_PROP_NM(o,17,cHttpsForceProxy);
@property (nonatomic, assign, JV2_PROP_GS_V2(cLzmaDictOffset,setCLzmaDictOffset:)) TarsInt8 JV2_PROP_NM(o,18,cLzmaDictOffset);
@property (nonatomic, assign, JV2_PROP_GS_V2(cReqType,setCReqType:)) TarsInt8 JV2_PROP_NM(o,19,cReqType);
@property (nonatomic, retain, JV2_PROP_GS_V2(stPushReq,setStPushReq:)) MttBrokerPushRequest* JV2_PROP_NM(o,20,stPushReq);
@property (nonatomic, assign, JV2_PROP_GS_V2(cSecuritySwitch,setCSecuritySwitch:)) TarsInt8 JV2_PROP_NM(o,21,cSecuritySwitch);
@property (nonatomic, assign, JV2_PROP_GS_V2(cReqOriginalPage,setCReqOriginalPage:)) TarsInt8 JV2_PROP_NM(o,22,cReqOriginalPage);

@end
