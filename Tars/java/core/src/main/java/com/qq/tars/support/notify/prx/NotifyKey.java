/**
 * Tencent is pleased to support the open source community by making Tars available.
 *
 * Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
 *
 * Licensed under the BSD 3-Clause License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.qq.tars.support.notify.prx;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

/**
 * notify信息的键值
 */
@TarsStruct
public class NotifyKey {

	@TarsStructProperty(order = 1, isRequire = true)
	public String name = "";
	@TarsStructProperty(order = 2, isRequire = true)
	public String ip = "";
	@TarsStructProperty(order = 3, isRequire = true)
	public int page = 0;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getIp() {
		return ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	public int getPage() {
		return page;
	}

	public void setPage(int page) {
		this.page = page;
	}

	public NotifyKey() {
	}

	public NotifyKey(String name, String ip, int page) {
		this.name = name;
		this.ip = ip;
		this.page = page;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(name);
		result = prime * result + TarsUtil.hashCode(ip);
		result = prime * result + TarsUtil.hashCode(page);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof NotifyKey)) {
			return false;
		}
		NotifyKey other = (NotifyKey) obj;
		return (
			TarsUtil.equals(name, other.name) &&
			TarsUtil.equals(ip, other.ip) &&
			TarsUtil.equals(page, other.page) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != name) {
			_os.write(name, 1);
		}
		if (null != ip) {
			_os.write(ip, 2);
		}
		_os.write(page, 3);
	}

	public void readFrom(TarsInputStream _is) {
		this.name = _is.read(name, 1, true);
		this.ip = _is.read(ip, 2, true);
		this.page = _is.read(page, 3, true);
	}

}
